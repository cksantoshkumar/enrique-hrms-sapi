#%RAML 1.0
title:  enrique-hrms-sapi
types: 
 Applicant: !include datatypes/Applicant.raml
 Employee: !include datatypes/Employee.raml
 Manager: !include datatypes/Manager.raml
 Announcements: !include datatypes/Announcements.raml
 Attendance: !include datatypes/Attendance.raml
 Compensation: !include datatypes/Compensation.raml
 Department: !include datatypes/Department.raml
 Expenses: !include datatypes/Expenses.raml
 FormerEmployee: !include datatypes/FormerEmployee.raml
 Leaves: !include datatypes/Leaves.raml
 OfficeReadiness: !include datatypes/OfficeReadiness.raml
 PersonalDetails: !include datatypes/PersonalDetails.raml
 Project: !include datatypes/Project.raml
 ResignationDetails: !include datatypes/ResignationDetails.raml

baseUri: http://localhost:8081/api/v1/sapi/

/applicant:
  get:
    description: Retrieves collection of applicants
    responses:
      200:
        body:
          application/json:
            type: array
            items: Applicant
            examples:
              output: !include examples/ApplicantGetExample.raml

  post:
    description: Create Applicant
    body:
      application/json:
        type: Applicant
    responses:
      200:
        body:
          application/json:
            example:
              message: Applicant Created Successfully

  put:
    description: Update Applicant Data
    body:
      application/json:
        type: Applicant 
    responses:
      200:
        body:
          application/json:
            example:
              message: Applicant Updated Successfully

  delete:
    description: Delete Applicant Data
    queryParameters:
      cid: string
    responses:
      200:
        body:
          application/json:
            example:
              message: Applicant Deleted Successfully

/employee:
  get:
    description: Retrieves collection of Employee
    responses:
      200:
        body:
          application/json:
            type: array
            items: Employee
            examples:
              output: !include examples/EmployeeGetExample.raml

  post:
    description: Create Employee
    body:
      application/json:
        type: Employee
    responses:
      200:
        body:
          application/json:
            example:
              message: Employee Created Successfully

  put:
    description: Update Employee Data
    body:
      application/json:
        type: Employee 
    responses:
      200:
        body:
          application/json:
            example:
              message: Employee Updated Successfully

  delete:
    description: Delete Employee Data
    queryParameters:
      cid: string
    responses:
      200:
        body:
          application/json:
            example:
              message: Employee Deleted Successfully

/manager:
  get:
    description: Retrieves collection of Manager
    responses:
      200:
        body:
          application/json:
            type: array
            items: Manager

  post:
    description: Create Manager
    body:
      application/json:
        type: Manager
    responses:
      200:
        body:
          application/json:
            example:
              message: Manager Created Successfully

  put:
    description: Update Manager Data
    body:
      application/json:
        type: Manager 
    responses:
      200:
        body:
          application/json:
            example:
              message: Manager Updated Successfully

  delete:
    description: Delete Manager Data
    queryParameters:
      cid: string
    responses:
      200:
        body:
          application/json:
            example:
              message: Manager Deleted Successfully

/department:
  get:
    description: Retrieves collection of Department
    responses:
      200:
        body:
          application/json:
            type: array
            items: Department

  post:
    description: Create Department
    body:
      application/json:
        type: Department
    responses:
      200:
        body:
          application/json:
            example:
              message: Department Created Successfully

  put:
    description: Update Department Data
    body:
      application/json:
        type: Department 
    responses:
      200:
        body:
          application/json:
            example:
              message: Department Updated Successfully

  delete:
    description: Delete Department Data
    queryParameters:
      cid: string
    responses:
      200:
        body:
          application/json:
            example:
              message: Department Deleted Successfully

/personal-details:
  get:
    description: Retrieves collection of Personal Details
    responses:
      200:
        body:
          application/json:
            type: array
            items: PersonalDetails

  post:
    description: Create PersonalDetails
    body:
      application/json:
        type: PersonalDetails
    responses:
      200:
        body:
          application/json:
            example:
              message: PersonalDetails Created Successfully

  put:
    description: Update PersonalDetails Data
    body:
      application/json:
        type: PersonalDetails 
    responses:
      200:
        body:
          application/json:
            example:
              message: PersonalDetails Updated Successfully

  delete:
    description: Delete PersonalDetails Data
    queryParameters:
      cid: string
    responses:
      200:
        body:
          application/json:
            example:
              message: PersonalDetails Deleted Successfully

/attendance:
  get:
    description: Retrieves collection of Attendance
    responses:
      200:
        body:
          application/json:
            type: array
            items: Attendance

  post:
    description: Create Attendance
    body:
      application/json:
        type: Attendance
    responses:
      200:
        body:
          application/json:
            example:
              message: Attendance Created Successfully

  put:
    description: Update Attendance Data
    body:
      application/json:
        type: Attendance 
    responses:
      200:
        body:
          application/json:
            example:
              message: Attendance Updated Successfully

  delete:
    description: Delete Attendance Data
    queryParameters:
      cid: string
    responses:
      200:
        body:
          application/json:
            example:
              message: Attendance Deleted Successfully

/compensation:
  get:
    description: Retrieves collection of Compensation
    responses:
      200:
        body:
          application/json:
            type: array
            items: Compensation

  post:
    description: Create Compensation
    body:
      application/json:
        type: Compensation
    responses:
      200:
        body:
          application/json:
            example:
              message: Compensation Created Successfully

  put:
    description: Update Compensation Data
    body:
      application/json:
        type: Compensation 
    responses:
      200:
        body:
          application/json:
            example:
              message: Compensation Updated Successfully

  delete:
    description: Delete Compensation Data
    queryParameters:
      cid: string
    responses:
      200:
        body:
          application/json:
            example:
              message: Compensation Deleted Successfully

/leaves:
  get:
    description: Retrieves collection of Leaves
    responses:
      200:
        body:
          application/json:
            type: array
            items: Leaves

  post:
    description: Create Leaves
    body:
      application/json:
        type: Leaves
    responses:
      200:
        body:
          application/json:
            example:
              message: Leaves Created Successfully

  put:
    description: Update Leaves Data
    body:
      application/json:
        type: Leaves 
    responses:
      200:
        body:
          application/json:
            example:
              message: Leaves Updated Successfully

  delete:
    description: Delete Leaves Data
    queryParameters:
      cid: string
    responses:
      200:
        body:
          application/json:
            example:
              message: Leaves Deleted Successfully

/expenses:
  get:
    description: Retrieves collection of Expenses
    responses:
      200:
        body:
          application/json:
            type: array
            items: Expenses

  post:
    description: Create Expenses
    body:
      application/json:
        type: Expenses
    responses:
      200:
        body:
          application/json:
            example:
              message: Expenses Created Successfully

  put:
    description: Update Expenses Data
    body:
      application/json:
        type: Expenses 
    responses:
      200:
        body:
          application/json:
            example:
              message: Leaves Expenses Successfully

  delete:
    description: Delete Expenses Data
    queryParameters:
      cid: string
    responses:
      200:
        body:
          application/json:
            example:
              message: Expenses Deleted Successfully

/office-readiness:
  get:
    description: Retrieves collection of Office Readiness
    responses:
      200:
        body:
          application/json:
            type: array
            items: OfficeReadiness

  post:
    description: Create OfficeReadiness
    body:
      application/json:
        type: OfficeReadiness
    responses:
      200:
        body:
          application/json:
            example:
              message: OfficeReadiness Created Successfully

  put:
    description: Update OfficeReadiness Data
    body:
      application/json:
        type: OfficeReadiness 
    responses:
      200:
        body:
          application/json:
            example:
              message: OfficeReadiness Updated Successfully

  delete:
    description: Delete OfficeReadiness Data
    queryParameters:
      cid: string
    responses:
      200:
        body:
          application/json:
            example:
              message: OfficeReadiness Deleted Successfully

/project:
  get:
    description: Retrieves collection of Project
    responses:
      200:
        body:
          application/json:
            type: array
            items: Project

  post:
    description: Create Project
    body:
      application/json:
        type: Project
    responses:
      200:
        body:
          application/json:
            example:
              message: Project Created Successfully

  put:
    description: Update Project Data
    body:
      application/json:
        type: Project 
    responses:
      200:
        body:
          application/json:
            example:
              message: Project Updated Successfully

  delete:
    description: Delete Project Data
    queryParameters:
      cid: string
    responses:
      200:
        body:
          application/json:
            example:
              message: Project Deleted Successfully

/announcements:
  get:
    description: Retrieves collection of Announcements
    responses:
      200:
        body:
          application/json:
            type: array
            items: Announcements

  post:
    description: Create Announcements
    body:
      application/json:
        type: Announcements
    responses:
      200:
        body:
          application/json:
            example:
              message: Announcements Created Successfully

  put:
    description: Update Announcements Data
    body:
      application/json:
        type: Announcements 
    responses:
      200:
        body:
          application/json:
            example:
              message: Announcements Updated Successfully

  delete:
    description: Delete Announcements Data
    queryParameters:
      cid: string
    responses:
      200:
        body:
          application/json:
            example:
              message: Announcements Deleted Successfully

/resignation-details:
  get:
    description: Retrieves collection of Resignation Details
    responses:
      200:
        body:
          application/json:
            type: array
            items: ResignationDetails

  post:
    description: Create ResignationDetails
    body:
      application/json:
        type: ResignationDetails
    responses:
      200:
        body:
          application/json:
            example:
              message: ResignationDetails Created Successfully

  put:
    description: Update ResignationDetails Data
    body:
      application/json:
        type: ResignationDetails 
    responses:
      200:
        body:
          application/json:
            example:
              message: ResignationDetails Updated Successfully

  delete:
    description: Delete ResignationDetails Data
    queryParameters:
      cid: string
    responses:
      200:
        body:
          application/json:
            example:
              message: ResignationDetails Deleted Successfully

/former-employee:
  get:
    description: Retrieves collection of  Former Employee
    responses:
      200:
        body:
          application/json:
            type: array
            items: FormerEmployee

  post:
    description: Create FormerEmployee
    body:
      application/json:
        type: FormerEmployee
    responses:
      200:
        body:
          application/json:
            example:
              message: FormerEmployee Created Successfully

  put:
    description: Update FormerEmployee Data
    body:
      application/json:
        type: FormerEmployee 
    responses:
      200:
        body:
          application/json:
            example:
              message: FormerEmployee Updated Successfully

  delete:
    description: Delete FormerEmployee Data
    queryParameters:
      cid: string
    responses:
      200:
        body:
          application/json:
            example:
              message: FormerEmployee Deleted Successfully